name: CI Pipeline
on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '#skip-ci')"
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      integration: ${{ steps.filter.outputs.integration }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Detect changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'db/**'
              - 'app/_lib/**'
              - 'test/unit/backend/**'
              - 'jest.config.js'
              - 'package.json'
              - 'package-lock.json'
              - 'middleware.ts'
              - 'drizzle.config.ts'        
              - '.env.template'
            frontend:
              - 'app/**'
              - '!app/_lib/**'
              - 'test/unit/frontend/**'
              - 'jest.config.js'
              - 'package.json'
              - 'package-lock.json'
              - '.env.template'
            integration:
              - 'test/integration/**'
              - 'db/**'
              - 'app/**'
              - 'docker-compose.yml'
              - 'package.json'
              - 'package-lock.json'
              - 'jest.integration.config.js'
              - '.env.template'

  build:
    runs-on: ubuntu-latest
    needs: detect-changes
    env:
      CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          npm ci

      - name: Build Project
        run: npm run build

  backend-unit-tests:
    runs-on: ubuntu-latest
    needs: [build, detect-changes]
    if: |
      contains(github.event.head_commit.message, '#only-backend') ||
      (
        !contains(github.event.head_commit.message, '#only-frontend') &&
        !contains(github.event.head_commit.message, '#only-integration') &&
        needs.detect-changes.outputs.backend == 'true'
      )
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          npm ci

      - name: Run Backend Unit Tests
        run: npm test -- --testPathPattern='test/unit'

  frontend-unit-tests:
    runs-on: ubuntu-latest
    needs: [build, detect-changes]
    if: |
      contains(github.event.head_commit.message, '#only-frontend') ||
      (
        !contains(github.event.head_commit.message, '#only-backend') &&
        !contains(github.event.head_commit.message, '#only-integration') &&
        needs.detect-changes.outputs.frontend == 'true'
      )
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          npm ci

      - name: Run Frontend Unit Tests
        run: npm test -- --testPathPattern='test/Frontend'

  integration-tests:
    runs-on: ubuntu-latest
    needs: [backend-unit-tests, frontend-unit-tests, detect-changes]
    if: |
      contains(github.event.head_commit.message, '#only-integration') ||
      (
        !contains(github.event.head_commit.message, '#only-backend') &&
        !contains(github.event.head_commit.message, '#only-frontend') &&
        needs.detect-changes.outputs.integration == 'true'
      )
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: self_service_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_HOSTNAME: localhost  
      DB_PORT: 5432
      DB_NAME: self_service_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/self_service_test
      CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          npm ci

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -U postgres; do sleep 2; done

      - name: Push Drizzle Migrations
        run: npx drizzle-kit push

      - name: Run Integration Tests
        run: npm run test:integration
